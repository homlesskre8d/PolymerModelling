// <auto-generated />
using ChemModel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemModel.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240504185625_Overhaul2")]
    partial class Overhaul2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ChemModel.Data.DbTables.EmpiricCoefficient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chars")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnitsId");

                    b.ToTable("EmpiricCoefficients");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.EmpiricCoefficientMathModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MathModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MathModelId");

                    b.HasIndex("PropertyId");

                    b.ToTable("EmpiricCoefficientMaths");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.MaterialEmpiricBind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PropertyId");

                    b.ToTable("MaterialEmpiricBinds");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.MaterialPropertyBind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PropertyId");

                    b.ToTable("MaterialPropertyBinds");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.MathModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Formula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TexFormula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MathModels");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chars")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnitsId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.UserAddMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddMaterials");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.UserAddMathModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MathModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MathModelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddMathModels");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.VarCoefficientMathModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MathModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MathModelId");

                    b.HasIndex("PropertyId");

                    b.ToTable("VarCoefficientsMaths");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.EmpiricCoefficient", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.Unit", "Units")
                        .WithMany()
                        .HasForeignKey("UnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Units");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.EmpiricCoefficientMathModel", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.MathModel", "MathModel")
                        .WithMany("EmpiricCoefficients")
                        .HasForeignKey("MathModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemModel.Data.DbTables.EmpiricCoefficient", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MathModel");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.MaterialEmpiricBind", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.Material", "Material")
                        .WithMany("MathModelProperties")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemModel.Data.DbTables.EmpiricCoefficient", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.MaterialPropertyBind", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.Material", "Material")
                        .WithMany("Properties")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemModel.Data.DbTables.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.Property", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.Unit", "Units")
                        .WithMany()
                        .HasForeignKey("UnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Units");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.User", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.UserAddMaterial", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemModel.Data.DbTables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.UserAddMathModel", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.MathModel", "MathModel")
                        .WithMany()
                        .HasForeignKey("MathModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemModel.Data.DbTables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MathModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.VarCoefficientMathModel", b =>
                {
                    b.HasOne("ChemModel.Data.DbTables.MathModel", "MathModel")
                        .WithMany("VarCoefficients")
                        .HasForeignKey("MathModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemModel.Data.DbTables.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MathModel");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.Material", b =>
                {
                    b.Navigation("MathModelProperties");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("ChemModel.Data.DbTables.MathModel", b =>
                {
                    b.Navigation("EmpiricCoefficients");

                    b.Navigation("VarCoefficients");
                });
#pragma warning restore 612, 618
        }
    }
}
